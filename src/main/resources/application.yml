spring:
  servlet:
    multipart: { max-file-size: 11MB, max-request-size: 11MB }
  jackson: { date-format: 'yyyy-MM-dd HH:mm:ss', time-zone: Asia/Ho_Chi_Minh }
  ai:
    ollama:
      chat:
        options: { model: llama3.1 }
    groq:
      api-key: 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
      base-url: https://api.groq.com/openai
      chat:
        model: deepseek-r1-distill-llama-70b
        temperature: 0.7
        max-tokens: 4000
        top-p: 0.9
        presence-penalty: 0.0
        frequency-penalty: 0.0
        stop-sequences: [ ]

  main:
    allow-bean-definition-overriding: true
  data:
    mongodb:
      uri: mongodb://localhost:27018/authen-hub
      auto-index-creation: true
      field-naming-strategy: org.springframework.data.mapping.model.SnakeCaseFieldNamingStrategy
  rsocket:
    server:
      mapping-path: /rsocket
      transport: websocket
      port: 7000
  security:
    oauth2:
      client:
        registration:
          google:
            clientSecret: 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
            clientId: 871802193268-io62a9nofs3sk04i1s7beplaoqhvv16h.apps.googleusercontent.com
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          facebook:
            client-id: 212sd1f231s4d32f1a5s64d56asdasd
            client-secret: 3902480293kmnsdmlksdjfkldsjnklfjmsadc234555
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - public_profile
              - email
            user-info-uri: https://graph.facebook.com/me
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

spring.autoconfigure.exclude: [org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration]

server:
  port: 8118
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

logging:
  level:
    org.springframework.data.mongodb: DEBUG
    org.springframework.rsocket: DEBUG
    com.mangahub: DEBUG
    org.springframework.security: DEBUG

cors:
  allowed-origins: http://localhost:5173
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type
  exposed-headers: "*"
  allow-credentials: true
  max-age: 3600

jwt:
  secret: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
  expiration: 604800000 # 7 days

app:
  frontend-url: ${FRONTEND_URL:http://localhost:5173}

# Admin account default
admin:
  username: admin
  email: admin@mangahub.com
  password: Admin@123
  fullName: Administrator